package P2S.UI.View;

import P2S.Control.Bundle.*;
import P2S.UI.View.JDialog.*;
import P2S.Control.*;
import P2S.Model.*;
import javax.swing.tree.*;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;

/**
 *
 * @author  Fabien
 */
public class JFrameP2S extends javax.swing.JFrame {
        
    public JDialogLogin JDialogLog;
    public static JDialogCreerProjet FenCreerProjet;
    
    public Utilisateur utilisateur;
        
    private Vector listeProjets;
    DefaultMutableTreeNode arbre;
    
    /** Creates new form JFrameP2S */
    public JFrameP2S() {
        initComponents();
                   
        this.utilisateur = null;
        
        listeProjets = new Vector();
        
        // Fenêtre plein écran
        this.setState(Frame.NORMAL); 
        Toolkit toolkit = Toolkit.getDefaultToolkit(); 
        Dimension dimension = toolkit.getScreenSize(); 
        this.setLocation(0,0);
        this.setSize(dimension);
        
        // Look & Feel de l'application
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }catch(Exception e){
            e.printStackTrace();
        }
        
        // Affichage de la boîte de dialogue pour se logger
        JDialogLogin JDialogLog = new JDialogLogin(this,true);
        JDialogLog.show();
            
        verifierLogin();
        
        // Initialise le texte de l'application dans la Locale actuelle
        initTexte();
        
        P2S.P2S.ControllerLocale.addLocaleListener(new LocaleListener(){
            public void localeChanged() {
                initTexte();
            } 
        });
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jTree1 = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        JMenuBar = new javax.swing.JMenuBar();
        JMenuFichier = new javax.swing.JMenu();
        JMenuItemCreerProjet = new javax.swing.JMenuItem();
        JMenuItemQuitter = new javax.swing.JMenuItem();
        JMenuOutils = new javax.swing.JMenu();
        JMenuItemRafraichir = new javax.swing.JMenuItem();
        JMenuItemPreferences = new javax.swing.JMenuItem();
        JMenuAide = new javax.swing.JMenu();
        JMenuItemAProposDe = new javax.swing.JMenuItem();

        setTitle("P2S");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jTree1.setPreferredSize(new java.awt.Dimension(150, 64));
        getContentPane().add(jTree1, java.awt.BorderLayout.WEST);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Envoyer alerte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jButton1, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        JMenuFichier.setText("Fichier");
        JMenuItemCreerProjet.setText("Cr\u00e9er un projet...");
        JMenuItemCreerProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMenuItemCreerProjetActionPerformed(evt);
            }
        });

        JMenuFichier.add(JMenuItemCreerProjet);

        JMenuItemQuitter.setText("Quitter");
        JMenuItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMenuItemQuitterActionPerformed(evt);
            }
        });

        JMenuFichier.add(JMenuItemQuitter);

        JMenuBar.add(JMenuFichier);

        JMenuOutils.setText("Outils");
        JMenuItemRafraichir.setText("Rafraichir");
        JMenuOutils.add(JMenuItemRafraichir);

        JMenuItemPreferences.setText("Pr\u00e9f\u00e9rences...");
        JMenuItemPreferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMenuItemPreferencesActionPerformed(evt);
            }
        });

        JMenuOutils.add(JMenuItemPreferences);

        JMenuBar.add(JMenuOutils);

        JMenuAide.setText("Aide");
        JMenuItemAProposDe.setText("A Propos de...");
        JMenuAide.add(JMenuItemAProposDe);

        JMenuBar.add(JMenuAide);

        setJMenuBar(JMenuBar);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-683)/2, (screenSize.height-523)/2, 683, 523);
    }//GEN-END:initComponents

    private void JMenuItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMenuItemQuitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_JMenuItemQuitterActionPerformed

    private void JMenuItemPreferencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMenuItemPreferencesActionPerformed
        new JDialogPreferences(this,true).show();
    }//GEN-LAST:event_JMenuItemPreferencesActionPerformed

    private void JMenuItemCreerProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMenuItemCreerProjetActionPerformed
        FenCreerProjet = new JDialogCreerProjet(this,true);
        FenCreerProjet.show();
    }//GEN-LAST:event_JMenuItemCreerProjetActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new JDialogAlerte(this,false).show();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void initTexte()
    {
        // Initialisation des labels de la barre de menu
        JMenuFichier.setText(Bundle.getText("JMenuFichier"));
        JMenuOutils.setText(Bundle.getText("JMenuOutils"));
        JMenuAide.setText(Bundle.getText("JMenuAide"));
        
        //Initialisation des labels du menu "Fichier"
        JMenuItemCreerProjet.setText(Bundle.getText("JMenuItemCreerProjet"));
        JMenuItemQuitter.setText(Bundle.getText("JMenuItemQuitter"));
        
        //Initialisation des labels du menu "Outils"
        JMenuItemRafraichir.setText(Bundle.getText("JMenuItemRafraichir"));
        JMenuItemPreferences.setText(Bundle.getText("JMenuItemPreferences"));
        
        //Initialisation des labels du menu "Aide"
        JMenuItemAProposDe.setText(Bundle.getText("JMenuItemAProposDe"));
        
    }
    
    private void verifierLogin()
    {
        boolean loginOK = false;
        do
        {
            if(this.utilisateur != null)
            {
                loginOK = true;
                // si c'est un superviseur, on crée son environnement
                if(this.utilisateur instanceof Superviseur)
                {
                    creerEnvironnementSup();
                }
                else // sinon c'est un directeur
                {
                    creerEnvironnementDir();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, new String("Login Inconnu ou mot de passe incorrect"),new String("Problème Login") , JOptionPane.WARNING_MESSAGE); 
                JDialogLog = new JDialogLogin(this,true);
                JDialogLog.show();
            }
        }while(!loginOK);           
    }
    
        
    private void creerEnvironnementSup()
    {
        // Construction de l'arborescence
        
        // Premier noeud
        arbre = new DefaultMutableTreeNode(Bundle.getText("NoeudProjets"));
        
        // Ajout des projets supervisés par l'utilisateur
        /*for( int i = 0; i < 3; ++i)
            racine.add( new DefaultMutableTreeNode("projet N° "+ i));*/
        
        // Ajout de la feuille "Tous les projets
        DefaultMutableTreeNode racineProjet = new DefaultMutableTreeNode(Bundle.getText("NoeudTousLesProjets"));
        
        // Ajout des projets du superviseur
        for(int i = 0 ; i < ((Superviseur) utilisateur).nbProjets(); i++){
            DefaultMutableTreeNode noeudProjet = new DefaultMutableTreeNode(((Superviseur) utilisateur).getProjet(i).getNom());
            racineProjet.add(noeudProjet);
        }
        
        arbre.add(racineProjet);
        
        // Met à jour l'arborescence
        jTree1.setModel (new DefaultTreeModel(arbre));
     }
    
    private void creerEnvironnementDir()
    {
        JMenuFichier.remove(JMenuItemCreerProjet);
        
        // Construction de l'arborescence
        
        // Premier noeud
        arbre = new DefaultMutableTreeNode(Bundle.getText("NoeudRessources"));
        
        // Ajout de toutes les ressources
        /*for( int i = 0; i < 3; ++i)
            racine.add( new DefaultMutableTreeNode("Nom Prenom "));*/
        //Ajout de la feuille "Tous les membres
        DefaultMutableTreeNode racineMembre = new DefaultMutableTreeNode(Bundle.getText("NoeudTousLesMembres"));
        arbre.add(racineMembre);
        
        // Ajout des membres 
        for(int i = 0 ; i < ((Directeur) utilisateur).nbMembres(); i++){
            DefaultMutableTreeNode noeudMembre = new DefaultMutableTreeNode(((Directeur) utilisateur).getMembre(i).getLogin());
            racineMembre.add(noeudMembre);
        }
        
        arbre.add( new DefaultMutableTreeNode(Bundle.getText("NoeudProjetsEnCours")));
                
        // Met à jour l'arborescence
        jTree1.setModel (new DefaultTreeModel(arbre));
    }
    
    public void ajouterProjet(Projet projet)
    {
        this.listeProjets.add(projet);
        this.arbre.add( new DefaultMutableTreeNode(projet.getNom()));
        // Met à jour l'arborescence
        jTree1.setModel (new DefaultTreeModel(arbre));
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMenuAide;
    private javax.swing.JMenuBar JMenuBar;
    private javax.swing.JMenu JMenuFichier;
    private javax.swing.JMenuItem JMenuItemAProposDe;
    private javax.swing.JMenuItem JMenuItemCreerProjet;
    private javax.swing.JMenuItem JMenuItemPreferences;
    private javax.swing.JMenuItem JMenuItemQuitter;
    private javax.swing.JMenuItem JMenuItemRafraichir;
    private javax.swing.JMenu JMenuOutils;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
    
}
